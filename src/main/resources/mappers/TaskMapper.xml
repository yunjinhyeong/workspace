<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.zzimcar.dao.TaskDao">
  <insert id="create" parameterType="TaskDto">
    INSERT workspace.task (
      member_pid, type , title, content, state, priority, start_at, due_at
    ) VALUES (
    #{memberPid}, #{type}, #{title}, #{content}, #{state}, #{priority}, #{startAt}, #{dueAt}
    )
  </insert>

  <select id="retrieveOne" parameterType="int" resultType="TaskDto">
    SELECT
      t.pid, t.member_pid, t.type, t.title, t.content, t.state, t.priority, t.start_at, t.due_at, t.created_at
    FROM
      workspace.task t
    WHERE
      t.pid = #{pid}
      AND deleted_at IS NULL
  </select>

  <select id="retrieveAll" resultType="TaskDto">
    SELECT
      t.pid, t.member_pid, t.type, t.title, t.content, t.state, t.priority, t.start_at, t.due_at, t.created_at
    FROM
      workspace.task t
    WHERE
      deleted_at IS NULL AND
      curdate() between t.start_at and t.due_at order by field(t.priority, 'lowest', 'low', 'high', 'highest') desc
  </select>

  <select id="totalCnt" resultType="int">
    SELECT
      count(*)
    FROM
      workspace.task t
    WHERE
      deleted_at IS NULL
  </select>

  <update id="updateOne" parameterType="map">
    UPDATE workspace.task t SET
      t.type = #{taskDto.type}, t.title = #{taskDto.title}, t.content = #{taskDto.content}, t.priority = #{taskDto.priority}, t.start_at = #{taskDto.startAt}, t.due_at = #{taskDto.dueAt}
    WHERE
      t.pid = #{pid} AND deleted_at IS NULL;
  </update>

  <delete id="deleteOne" parameterType="int">
    UPDATE workspace.task t SET
      t.deleted_at = now()
    WHERE
      t.pid = #{pid} AND t.deleted_at IS NULL
  </delete>

  <select id="retrieveJoinAll" resultMap="memberAndTask">
    SELECT m.pid, m.name, m.department, m.role,
           t.pid as t_pid, t.member_pid, t.type, t.title, t.content, t.state, t.priority, t.start_at, t.due_at, t.created_at
    FROM workspace.member m LEFT OUTER JOIN workspace.task t
                                            ON m.pid = t.member_pid
    where m.pid = #{pid}
  </select>
  <resultMap id="memberAndTask" type="memberDto">
    <id column="pid" property="pid"/>
    <result column="name" property="name"/>
    <result column="department" property="department"/>
    <result column="role" property="role"/>
    <collection property="taskList" ofType="taskResDto" javaType="arraylist">
      <id column="t_pid" property="pid"/>
      <result column="member_pid" property="memberPid"/>
      <result column="type" property="type"/>
      <result column="title" property="title"/>
      <result column="content" property="content"/>
      <result column="state" property="state"/>
      <result column="priority" property="priority"/>
      <result column="start_at" property="startAt"/>
      <result column="due_at" property="dueAt"/>
      <result column="created_at" property="createdAt"/>
    </collection>
  </resultMap>

</mapper>